[
["overview.html", "Data Skills for Reproducible Science Overview 0.1 Course Aims 0.2 Intended Learning Outcomes 0.3 Course Resources 0.4 Course Outline 0.5 Formative Exercises 0.6 Other Resources", " Data Skills for Reproducible Science 2020-09-24 Overview This course provides an overview of skills needed for reproducible research and open science using the statistical programming language R. Students will learn about data visualisation, data tidying and wrangling, archiving, iteration and functions, probability and data simulations, general linear models, and reproducible workflows. Learning is reinforced through weekly assignments that involve working with different types of data. 0.1 Course Aims This course aims to teach students the basic principles of reproducible research and to provide practical training in data processing and analysis in the statistical programming language R. 0.2 Intended Learning Outcomes By the end of this course students will be able to: Draw on a range of specialised skills and techniques to formulate a research design appropriate to various kinds of questions in psychology and neuroscience Write scripts in R to organise and transform data sets using best accepted practices Explain basics of probability and its role in statistical inference Critically analyse data and report descriptive and inferential statistics in a reproducible manner 0.3 Course Resources Each chapter has several short video lectures for the main learning outcomes at the playlist Data Skills. The videos are captioned and watching with the captioning on is a useful way to learn the jargon of computational reproducibility. If you cannot access YouTube, the videos are available on the course Moodle and by request from the instructor. There is a custom package for this course called dataskills. You can install it with the code below. It will download all of the packages that are used in the book, along with an offline copy of this book, the shiny apps used in the book, and the exercises. devtools::install_github(&quot;psyteachr/msc-data-skills&quot;) 0.4 Course Outline The overview below lists the beginner learning outcomes only. Some lessons have additional learning outcomes for intermediate or advanced students. Getting Started Understand the components of the RStudio IDE Type commands into the console Understand function syntax Install a package Organise a project Create and compile an Rmarkdown document Working with Data Load built-in datasets Import data from CSV and Excel files Create a data table Understand the use the basic data types Understand and use the basic container types (list, vector) Use vectorized operations Be able to troubleshoot common data import problems Data Visualisation Understand what types of graphs are best for different types of data Create common types of graphs with ggplot2 Set custom labels, colours, and themes Combine plots on the same plot, as facets, or as a grid using cowplot Save plots as an image file Tidy Data Understand the concept of tidy data Be able to convert between long and wide formats using pivot functions Be able to use the 4 basic tidyr verbs Be able to chain functions using pipes Data Wrangling Be able to use the 6 main dplyr one-table verbs: select(), filter(), arrange(), mutate(), summarise(), group_by() Be able to wrangle data by chaining tidyr and dplyr functions Be able to use these additional one-table verbs: rename(), distinct(), count(), slice(), pull() Data Relations Be able to use the 4 mutating join verbs: left_join(), right_join(), inner_join(), full_join() Be able to use the 2 filtering join verbs: semi_join(), anti_join() Be able to use the 2 binding join verbs: bind_rows(), bind_cols() Be able to use the 3 set operations: intersect(), union(), setdiff() Iteration &amp; Functions Work with iteration functions: rep(), seq(), and replicate() Use map() and apply() functions Write your own custom functions with function() Set default values for the arguments in your functions Probability &amp; Simulation Understand what types of data are best modeled by different distributions: uniform, binomial, normal, poisson Generate and plot data randomly sampled from the above distributions Test sampled distributions against a null hypothesis using: exact binomial test, t-test (1-sample, independent samples, paired samples), correlation (pearson, kendall and spearman) Define the following statistical terms: p-value, alpha, power, smallest effect size of interest (SESOI), false positive (type I error), false negative (type II error), confidence interval (CI) Calculate power using iteration and a sampling function Introduction to GLM Define the components of the GLM Simulate data using GLM equations Identify the model parameters that correspond to the data-generation parameters Understand and plot residuals Predict new values using the model Explain the differences among coding schemes Reproducible Workflows Create a reproducible script in R Markdown Edit the YAML header to add table of contents and other options Include a table Include a figure Use source() to include code from an external file Report the output of an analysis using inline R 0.5 Formative Exercises Exercises are available at the end of each lessonâ€™s webpage. These are not marked or mandatory, but if you can work through each of these (using web resources, of course), you will easily complete the marked assessments. Download all exercises and data files below as a ZIP archive. 01 intro: Intro to R, functions, R markdown 02 data: Vectors, tabular data, data import, pipes Essential Skills: You must be able to complete these exercises to advance in the class beyond the first two lectures 03 ggplot: Data visualisation 04 tidyr: Tidy Data 05 dplyr: Data wrangling 06 joins: Data relations 07 functions: Functions and iteration 08 simulation: Simulation 09 glm: GLM 0.6 Other Resources Miscellanous materials added throughout the semester, such as tips on installation, or the results of live-coding demos, can be found in the Appendices. Learning Statistics with R by Navarro R for Data Science by Grolemund and Wickham 0.6.1 Online tutorials swirl R for Reproducible Scientific Analysis codeschool.com datacamp Improving your statistical inferences on Coursera 0.6.2 Cheat sheets You can access several cheatsheets in RStudio under the Help menu Or get the most recent RStudio Cheat Sheets 0.6.3 Other Style guide for R programming #rstats on twitter highly recommended! "]
]
